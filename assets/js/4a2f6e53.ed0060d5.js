"use strict";(self.webpackChunkdisnake_guide=self.webpackChunkdisnake_guide||[]).push([[540],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var l=r.createContext({}),d=function(t){var e=r.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=d(t.components);return r.createElement(l.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,l=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),p=d(n),m=o,y=p["".concat(l,".").concat(m)]||p[m]||c[m]||a;return n?r.createElement(y,i(i({ref:e},u),{},{components:n})):r.createElement(y,i({ref:e},u))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:o,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3201:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const a={description:"They refer to views, buttons and select menus that can be added to the messages your bot sends."},i="Buttons",s={unversionedId:"interactions/buttons",id:"interactions/buttons",title:"Buttons",description:"They refer to views, buttons and select menus that can be added to the messages your bot sends.",source:"@site/docs/interactions/buttons.mdx",sourceDirName:"interactions",slug:"/interactions/buttons",permalink:"/interactions/buttons",draft:!1,editUrl:"https://github.com/DisnakeDev/guide/edit/main/guide/docs/interactions/buttons.mdx",tags:[],version:"current",lastUpdatedBy:"Victor",lastUpdatedAt:1682950341,formattedLastUpdatedAt:"May 1, 2023",frontMatter:{description:"They refer to views, buttons and select menus that can be added to the messages your bot sends."},sidebar:"guideSidebar",previous:{title:"Slash Commands",permalink:"/interactions/slash-commands"},next:{title:"Select Menus",permalink:"/interactions/select-menus"}},l={},d=[{value:"Building and sending buttons",id:"building-and-sending-buttons",level:2},{value:"Button styles",id:"button-styles",level:2},{value:"Disabled buttons",id:"disabled-buttons",level:3},{value:"Receiving button callback",id:"receiving-button-callback",level:2},{value:"Views vs. low-level components",id:"views-vs-low-level-components",level:2}],u=t=>function(e){return console.warn("Component "+t+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)},c=u("DiscordMessages"),p=u("DiscordMessage"),m=u("DiscordInteraction"),y=u("DiscordButtons"),k=u("DiscordButton"),b={toc:d};function g(t){let{components:e,...n}=t;return(0,o.kt)("wrapper",(0,r.Z)({},b,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"buttons"},"Buttons"),(0,o.kt)("p",null,"Components allow users to interact with your bot through interactive UI elements. In this section, we will discuss how bots can receive and process information from these elements through the library."),(0,o.kt)("br",null),(0,o.kt)(c,{mdxType:"DiscordMessages"},(0,o.kt)(p,{profile:"bot",mdxType:"DiscordMessage"},(0,o.kt)("div",{slot:"interactions"},(0,o.kt)(m,{profile:"user",command:!0,mdxType:"DiscordInteraction"},"buttons")),"Need help?",(0,o.kt)("div",{slot:"actions"},(0,o.kt)(y,{mdxType:"DiscordButtons"},(0,o.kt)(k,{type:"success",mdxType:"DiscordButton"},"Yes"),(0,o.kt)(k,{type:"danger",mdxType:"DiscordButton"},"No"))))),(0,o.kt)("br",null),(0,o.kt)("p",null,"The code for this command is given below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="buttons.py"',title:'"buttons.py"'},'# At the top of the file.\nimport disnake\nfrom disnake.ext import commands\n\n# The slash command that responds with a message.\n@bot.slash_command()\nasync def buttons(inter: disnake.ApplicationCommandInteraction):\n    await inter.response.send_message(\n        "Need help?",\n        components=[\n            disnake.ui.Button(label="Yes", style=disnake.ButtonStyle.success, custom_id="yes"),\n            disnake.ui.Button(label="No", style=disnake.ButtonStyle.danger, custom_id="no"),\n        ],\n    )\n\n\n@bot.listen("on_button_click")\nasync def help_listener(inter: disnake.MessageInteraction):\n    if inter.component.custom_id not in ["yes", "no"]:\n        # We filter out any other button presses except\n        # the components we wish to process.\n        return\n\n    if inter.component.custom_id == "yes":\n        await inter.response.send_message("Contact us at https://discord.gg/disnake!")\n    elif inter.component.custom_id == "no":\n        await inter.response.send_message("Got it. Signing off!")\n')),(0,o.kt)("h2",{id:"building-and-sending-buttons"},"Building and sending buttons"),(0,o.kt)("h2",{id:"button-styles"},"Button styles"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Syntax"),(0,o.kt)("th",{parentName:"tr",align:null},"Color"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Primary"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ButtonStyle.primary")," / ",(0,o.kt)("inlineCode",{parentName:"td"},"ButtonStyle.blurple")),(0,o.kt)("td",{parentName:"tr",align:null},"Blurple")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Secondary"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ButtonStyle.secondary")," / ",(0,o.kt)("inlineCode",{parentName:"td"},"ButtonStyle.grey")," / ",(0,o.kt)("inlineCode",{parentName:"td"},"ButtonStyle.gray")),(0,o.kt)("td",{parentName:"tr",align:null},"Grey")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Success"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ButtonStyle.success")," / ",(0,o.kt)("inlineCode",{parentName:"td"},"ButtonStyle.green ")),(0,o.kt)("td",{parentName:"tr",align:null},"Green")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Danger"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ButtonStyle.danger")," / ",(0,o.kt)("inlineCode",{parentName:"td"},"ButtonStyle.red")),(0,o.kt)("td",{parentName:"tr",align:null},"Red")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Link"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ButtonStyle.link")," / ",(0,o.kt)("inlineCode",{parentName:"td"},"ButtonStyle.url")),(0,o.kt)("td",{parentName:"tr",align:null},"Grey")))),(0,o.kt)("br",null),(0,o.kt)(c,{mdxType:"DiscordMessages"},(0,o.kt)(p,{profile:"bot",mdxType:"DiscordMessage"},(0,o.kt)("div",{slot:"actions"},(0,o.kt)(y,{mdxType:"DiscordButtons"},(0,o.kt)(k,{type:"primary",mdxType:"DiscordButton"},"Primary"),(0,o.kt)(k,{type:"secondary",mdxType:"DiscordButton"},"Secondary"),(0,o.kt)(k,{type:"success",mdxType:"DiscordButton"},"Success"),(0,o.kt)(k,{type:"danger",mdxType:"DiscordButton"},"Danger"),(0,o.kt)(k,{type:"link",url:"https://guide.disnake.dev/",mdxType:"DiscordButton"},"Link"))))),(0,o.kt)("br",null),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"Link")," buttons ",(0,o.kt)("em",{parentName:"p"},"cannot")," have a ",(0,o.kt)("inlineCode",{parentName:"p"},"custom_id"),", and ",(0,o.kt)("em",{parentName:"p"},"do not")," send an interaction event when clicked.")),(0,o.kt)("h3",{id:"disabled-buttons"},"Disabled buttons"),(0,o.kt)("h2",{id:"receiving-button-callback"},"Receiving button callback"),(0,o.kt)("h2",{id:"views-vs-low-level-components"},"Views vs. low-level components"))}g.isMDXComponent=!0}}]);